[{"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\index.js":"1","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\App.js":"2","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\reportWebVitals.js":"3","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Nav\\Nav.js":"4","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Login\\Login.js":"5","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Register\\Register.js":"6","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\util\\auth.js":"7","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\UserProvider\\UserProvider.js":"8","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\UserContext.js":"9"},{"size":308,"mtime":1609092539574,"results":"10","hashOfConfig":"11"},{"size":1348,"mtime":1609696289326,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3402,"mtime":1609698802416,"results":"14","hashOfConfig":"11"},{"size":4739,"mtime":1609698312687,"results":"15","hashOfConfig":"11"},{"size":9704,"mtime":1609649892100,"results":"16","hashOfConfig":"11"},{"size":302,"mtime":1609659135995,"results":"17","hashOfConfig":"11"},{"size":965,"mtime":1609698224896,"results":"18","hashOfConfig":"11"},{"size":170,"mtime":1609661840065,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"pahza8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\index.js",[],["42","43"],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\App.js",["44","45"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\n\nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport UserProvider from './components/UserProvider/UserProvider';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#0d47a1',\n    },\n    secondary: {\n      main: '#0d47a1',\n    },\n  },\n});\n\nconst queryClient = new QueryClient();\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <UserProvider>\n      <div className=\"App\">\n        <CssBaseline />\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\"></Route>\n\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n\n          <Route path=\"/Register\">\n            <Register />\n          </Route>\n        </Switch>\n      </div>\n    </UserProvider>\n    <QueryClientProvider client={queryClient}>\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  </ThemeProvider>\n);\n\nexport default App;\n","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\reportWebVitals.js",[],["46","47"],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Nav\\Nav.js",[],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Login\\Login.js",["48"],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Register\\Register.js",["49"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  genreContainer: {\r\n    textAlign: 'center',\r\n    marginTop: 50,\r\n    padding: 25,\r\n  },\r\n  genreButton: {\r\n    height: 48,\r\n    borderRadius: 0,\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst GenreInputForm = ({\r\n  classes,\r\n  setState,\r\n  state,\r\n  userData,\r\n  registerQuery,\r\n  setRegisterQuery,\r\n}) => {\r\n  const [selectedGenres, setSelectedGenres] = useState({});\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [query, setQuery] = useState({\r\n    isLoading: false,\r\n    isSuccess: false,\r\n    isError: false,\r\n    data: [],\r\n  });\r\n  const [elements, setElements] = useState([]);\r\n  let updated = useRef(selectedGenres);\r\n\r\n  // Event Handlers\r\n  const handleClick = item => {\r\n    if (!updated.current[item.genre]) {\r\n      if (Object.keys(updated.current).length === 3) {\r\n        return;\r\n      }\r\n      setSelectedGenres(prev => {\r\n        updated.current = { ...prev, [item.genre]: { ...item } };\r\n        return { ...prev, [item.genre]: { ...item } };\r\n      });\r\n    } else {\r\n      setSelectedGenres(prev => {\r\n        delete prev[item.genre];\r\n        updated.current = { ...prev };\r\n        return { ...prev };\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    Object.keys(selectedGenres).length === 3\r\n      ? setDisabled(false)\r\n      : setDisabled(true);\r\n  }, [selectedGenres]);\r\n\r\n  useEffect(() => {\r\n    setQuery({ ...query, isLoading: true });\r\n    axios\r\n      .get('https://watch-this-instead.herokuapp.com/api/genres')\r\n      .then(res => {\r\n        setQuery({\r\n          ...query,\r\n          isLoading: false,\r\n          isSuccess: true,\r\n          data: [...res.data],\r\n        });\r\n      })\r\n      .catch(err =>\r\n        setQuery({ ...query, isLoading: false, isError: true, data: [err] })\r\n      );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!query.isLoading && query.isError) {\r\n      setElements([]);\r\n    }\r\n\r\n    if (!query.isLoading && query.isSuccess) {\r\n      let oldArr = [...query.data];\r\n      var maxVal = 4;\r\n      var delta = Math.floor(oldArr.length / maxVal);\r\n\r\n      for (let i = 0; i < oldArr.length; i = i + delta) {\r\n        const items = [];\r\n        for (let j = 0; j < 4; j++) {\r\n          oldArr[i + j] && items.push(oldArr[i + j]);\r\n        }\r\n        const containerItems = items.map(item => {\r\n          return (\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={3}\r\n              key={nanoid()}\r\n              onClick={() => handleClick(item)}\r\n            >\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                className={classes.genreButton}\r\n              >\r\n                {item.genre}\r\n              </Button>\r\n            </Grid>\r\n          );\r\n        });\r\n\r\n        const container = (\r\n          <Grid container spacing={2} key={nanoid()}>\r\n            {containerItems}\r\n          </Grid>\r\n        );\r\n        setElements(prev => {\r\n          return [...prev, container];\r\n        });\r\n      }\r\n    }\r\n  }, [\r\n    query.data,\r\n    query.isLoading,\r\n    query.isSuccess,\r\n    query.isError,\r\n    setSelectedGenres,\r\n    classes.genreButton,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      {query.isLoading ? (\r\n        <div> Loading... </div>\r\n      ) : query.isError ? (\r\n        <div> Hmm... seems like something went wrong </div>\r\n      ) : (\r\n        <>\r\n          <Container\r\n            component=\"main\"\r\n            disableGutters\r\n            maxWidth=\"xl\"\r\n            className={classes.genreContainer}\r\n          >\r\n            {elements.length > 0 && elements}\r\n            <GenreToSendButton\r\n              disabled={disabled}\r\n              setState={setState}\r\n              data={selectedGenres}\r\n              state={state}\r\n              userData={userData}\r\n              registerQuery={registerQuery}\r\n              setRegisterQuery={setRegisterQuery}\r\n            />\r\n          </Container>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst GenreToSendButton = ({\r\n  disabled,\r\n  state,\r\n  setState,\r\n  data,\r\n  userData,\r\n  registerQuery,\r\n  setRegisterQuery,\r\n}) => {\r\n  const handleClick = async () => {\r\n    setRegisterQuery({\r\n      ...registerQuery,\r\n      isLoading: true,\r\n    });\r\n\r\n    setState({\r\n      ...state,\r\n      current: 'Loading',\r\n    });\r\n    const createUserData = {\r\n      ...userData,\r\n      genres: Object.keys(data).map(key => key), // Needs to be array\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        'https://watch-this-instead.herokuapp.com/api/users/register',\r\n        createUserData\r\n      );\r\n      setRegisterQuery({\r\n        isError: false,\r\n        isSuccess: true,\r\n        isLoading: false,\r\n        data: res.data,\r\n      });\r\n\r\n      setState({\r\n        ...state,\r\n        current: 'Success',\r\n      });\r\n    } catch (err) {\r\n      setRegisterQuery({\r\n        isLoading: false,\r\n        isSuccess: false,\r\n        isError: true,\r\n        data: err,\r\n      });\r\n      setState({\r\n        ...state,\r\n        current: 'Error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    setState({ ...state, current: 'email' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleBackClick}>Go Back</Button>\r\n      <Button disabled={disabled} onClick={handleClick}>\r\n        Register\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst EmailInputForm = ({\r\n  state,\r\n  classes,\r\n  handleChange,\r\n  userData,\r\n  setState,\r\n}) => {\r\n  const handleClick = () => {\r\n    setState({ ...state, current: 'genres' });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                value={userData.email}\r\n                onChange={handleChange}\r\n                autoComplete=\"off\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={userData.password}\r\n                onChange={handleChange}\r\n                autoComplete=\"off\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleClick}\r\n          >\r\n            Continue\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}></Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    current: 'email',\r\n  });\r\n\r\n  const [userData, setUserData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [query, setQuery] = useState({\r\n    isLoading: false,\r\n    isError: false,\r\n    isSuccess: false,\r\n    data: [],\r\n  });\r\n\r\n  // Event Handlers\r\n  const handleChange = e => {\r\n    setUserData({\r\n      ...userData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  if (state.current === 'email') {\r\n    return (\r\n      <EmailInputForm\r\n        classes={classes}\r\n        setState={setState}\r\n        userData={userData}\r\n        handleChange={handleChange}\r\n        state={state}\r\n      />\r\n    );\r\n  } else if (state.current === 'genres') {\r\n    return (\r\n      <GenreInputForm\r\n        classes={classes}\r\n        setState={setState}\r\n        state={state}\r\n        userData={userData}\r\n        registerQuery={query}\r\n        setRegisterQuery={setQuery}\r\n      />\r\n    );\r\n  } else if (state.current === 'Loading') {\r\n    return <div>Loading data...</div>;\r\n  } else if (state.current === 'Success') {\r\n    return <Redirect to=\"/login\" />;\r\n  } else {\r\n    return <div>Error</div>;\r\n  }\r\n}\r\n","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\util\\auth.js",[],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\UserProvider\\UserProvider.js",["50"],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\UserContext.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":2,"column":27,"nodeType":"57","messageId":"58","endLine":2,"endColumn":33},{"ruleId":"55","severity":1,"message":"59","line":2,"column":42,"nodeType":"57","messageId":"58","endLine":2,"endColumn":46},{"ruleId":"51","replacedBy":"60"},{"ruleId":"53","replacedBy":"61"},{"ruleId":"55","severity":1,"message":"62","line":16,"column":10,"nodeType":"57","messageId":"58","endLine":16,"endColumn":23},{"ruleId":"63","severity":1,"message":"64","line":106,"column":6,"nodeType":"65","endLine":106,"endColumn":8,"suggestions":"66"},{"ruleId":"55","severity":1,"message":"67","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":18},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.",["68"],["69"],"'validateToken' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array. You can also do a functional update 'setQuery(q => ...)' if you only need 'query' in the 'setQuery' call.","ArrayExpression",["70"],"'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [query]",{"range":"73","text":"74"},[2908,2910],"[query]"]