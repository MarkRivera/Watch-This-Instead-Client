[{"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\index.js":"1","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\App.js":"2","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\reportWebVitals.js":"3","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Nav\\Nav.js":"4","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Login\\Login.js":"5","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Register\\Register.js":"6","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\util\\auth.js":"7","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\UserProvider\\UserProvider.js":"8","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\UserContext.js":"9","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Movies\\Movies.js":"10","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Register\\GenreInputForm.js":"11","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Register\\GenreToSendButton.js":"12","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Register\\GenreButton.js":"13","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\state\\actions\\actions.js":"14","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\state\\reducers\\reducers.js":"15","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Profile\\Profile.js":"16"},{"size":1209,"mtime":1610467945933,"results":"17","hashOfConfig":"18"},{"size":1305,"mtime":1610473959180,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":3781,"mtime":1610441938476,"results":"21","hashOfConfig":"18"},{"size":3782,"mtime":1610438115195,"results":"22","hashOfConfig":"18"},{"size":4406,"mtime":1609739948206,"results":"23","hashOfConfig":"18"},{"size":302,"mtime":1609659135995,"results":"24","hashOfConfig":"18"},{"size":923,"mtime":1609698889461,"results":"25","hashOfConfig":"18"},{"size":170,"mtime":1609661840065,"results":"26","hashOfConfig":"18"},{"size":5622,"mtime":1610440793039,"results":"27","hashOfConfig":"18"},{"size":4058,"mtime":1609739863764,"results":"28","hashOfConfig":"18"},{"size":1530,"mtime":1609737219332,"results":"29","hashOfConfig":"18"},{"size":697,"mtime":1609739933378,"results":"30","hashOfConfig":"18"},{"size":2327,"mtime":1610442460699,"results":"31","hashOfConfig":"18"},{"size":2421,"mtime":1610442420513,"results":"32","hashOfConfig":"18"},{"size":554,"mtime":1610473890203,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pahza8",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\index.js",[],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\App.js",[],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\reportWebVitals.js",[],["69","70"],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Nav\\Nav.js",[],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Login\\Login.js",["71","72"],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Register\\Register.js",[],["73","74"],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\util\\auth.js",[],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\UserProvider\\UserProvider.js",[],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\UserContext.js",[],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Movies\\Movies.js",[],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Register\\GenreInputForm.js",["75","76"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport GenreToSendButton from './GenreToSendButton';\r\nimport GenreButton from './GenreButton';\r\n\r\n// Material UI\r\nimport { Grid, Container, Typography } from '@material-ui/core';\r\n\r\n// 3rd Party\r\nimport axios from 'axios';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst GenreInputForm = ({\r\n  classes,\r\n  setState,\r\n  state,\r\n  userData,\r\n  registerQuery,\r\n  setRegisterQuery,\r\n}) => {\r\n  const [selectedGenres, setSelectedGenres] = useState({});\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [query, setQuery] = useState({\r\n    isLoading: false,\r\n    isSuccess: false,\r\n    isError: false,\r\n    data: [],\r\n  });\r\n  const [elements, setElements] = useState([]);\r\n  let updated = useRef(selectedGenres);\r\n\r\n  // Event Handlers\r\n  const handleClick = item => {\r\n    if (!updated.current[item.genre]) {\r\n      if (Object.keys(updated.current).length === 3) {\r\n        return;\r\n      }\r\n      setSelectedGenres(prev => {\r\n        updated.current = { ...prev, [item.genre]: { ...item } };\r\n        return { ...prev, [item.genre]: { ...item } };\r\n      });\r\n    } else {\r\n      setSelectedGenres(prev => {\r\n        delete prev[item.genre];\r\n        updated.current = { ...prev };\r\n        return { ...prev };\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    Object.keys(selectedGenres).length === 3\r\n      ? setDisabled(false)\r\n      : setDisabled(true);\r\n  }, [selectedGenres]);\r\n\r\n  useEffect(() => {\r\n    setQuery({ ...query, isLoading: true });\r\n    axios\r\n      .get('https://watch-this-instead.herokuapp.com/api/genres')\r\n      .then(res => {\r\n        setQuery({\r\n          ...query,\r\n          isLoading: false,\r\n          isSuccess: true,\r\n          data: [...res.data],\r\n        });\r\n      })\r\n      .catch(err =>\r\n        setQuery({ ...query, isLoading: false, isError: true, data: [err] })\r\n      );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!query.isLoading && query.isError) {\r\n      setElements([]);\r\n    }\r\n\r\n    if (!query.isLoading && query.isSuccess) {\r\n      let oldArr = [...query.data];\r\n      var maxVal = 4;\r\n      var delta = Math.floor(oldArr.length / maxVal);\r\n\r\n      for (let i = 0; i < oldArr.length; i = i + delta) {\r\n        const items = [];\r\n        for (let j = 0; j < 4; j++) {\r\n          oldArr[i + j] && items.push(oldArr[i + j]);\r\n        }\r\n        const containerItems = items.map(item => {\r\n          return (\r\n            <Grid item xs={12} sm={3} key={nanoid()}>\r\n              <GenreButton\r\n                classes={classes}\r\n                item={item}\r\n                handleClick={handleClick}\r\n                updated={updated}\r\n              />\r\n            </Grid>\r\n          );\r\n        });\r\n\r\n        const container = (\r\n          <Grid container spacing={2} key={nanoid()}>\r\n            {containerItems}\r\n          </Grid>\r\n        );\r\n        setElements(prev => {\r\n          return [...prev, container];\r\n        });\r\n      }\r\n    }\r\n  }, [\r\n    query.data,\r\n    query.isLoading,\r\n    query.isSuccess,\r\n    query.isError,\r\n    setSelectedGenres,\r\n    classes.genreButton,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      {query.isLoading ? (\r\n        <div> Loading... </div>\r\n      ) : query.isError ? (\r\n        <div> Hmm... seems like something went wrong </div>\r\n      ) : (\r\n        <>\r\n          <Container\r\n            component=\"main\"\r\n            disableGutters\r\n            maxWidth=\"xl\"\r\n            className={classes.genreContainer}\r\n          >\r\n            <Typography variant=\"h2\" className={classes.header}>\r\n              Choose 3 Genres:\r\n            </Typography>\r\n            {elements.length > 0 && elements}\r\n            <GenreToSendButton\r\n              disabled={disabled}\r\n              setState={setState}\r\n              data={selectedGenres}\r\n              state={state}\r\n              userData={userData}\r\n              registerQuery={registerQuery}\r\n              setRegisterQuery={setRegisterQuery}\r\n            />\r\n          </Container>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GenreInputForm;\r\n","C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Register\\GenreToSendButton.js",[],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Register\\GenreButton.js",[],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\state\\actions\\actions.js",[],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\state\\reducers\\reducers.js",[],"C:\\Users\\mrive\\desktop\\projects\\watch-this-instead-client\\src\\components\\Profile\\Profile.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"85","line":1,"column":38,"nodeType":"83","messageId":"84","endLine":1,"endColumn":48},{"ruleId":"77","replacedBy":"86"},{"ruleId":"79","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":71,"column":6,"nodeType":"90","endLine":71,"endColumn":8,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"92","line":111,"column":6,"nodeType":"90","endLine":118,"endColumn":4,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.",["94"],["95"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array. You can also do a functional update 'setQuery(q => ...)' if you only need 'query' in the 'setQuery' call.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'classes'. Either include it or remove the dependency array.",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [query]",{"range":"102","text":"103"},"Update the dependencies array to be: [query.data, query.isLoading, query.isSuccess, query.isError, setSelectedGenres, classes.genreButton, classes]",{"range":"104","text":"105"},[1885,1887],"[query]",[2964,3101],"[query.data, query.isLoading, query.isSuccess, query.isError, setSelectedGenres, classes.genreButton, classes]"]